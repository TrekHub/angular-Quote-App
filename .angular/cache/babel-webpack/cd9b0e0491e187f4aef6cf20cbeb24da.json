{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../quote/quote.component\";\n\nfunction QuotesComponent_app_quote_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"app-quote\", 2);\n    i0.ɵɵlistener(\"deleteEvent\", function QuotesComponent_app_quote_1_Template_app_quote_deleteEvent_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.deleteQuote($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const quote_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"quote\", quote_r1);\n  }\n}\n\nexport let QuotesComponent = /*#__PURE__*/(() => {\n  class QuotesComponent {\n    constructor() {}\n\n    ngOnInit() {}\n\n    deleteQuote(x) {\n      this.quotes = this.quotes.filter(q => q.quoteId !== x);\n    }\n\n  }\n\n  QuotesComponent.ɵfac = function QuotesComponent_Factory(t) {\n    return new (t || QuotesComponent)();\n  };\n\n  QuotesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: QuotesComponent,\n    selectors: [[\"app-quotes\"]],\n    inputs: {\n      quotes: \"quotes\"\n    },\n    decls: 2,\n    vars: 1,\n    consts: [[1, \"container\", \"mx-auto\", \"d-flex\", \"flex-wrap\", \"justify-content-around\", \"items-align-start\"], [3, \"quote\", \"deleteEvent\", 4, \"ngFor\", \"ngForOf\"], [3, \"quote\", \"deleteEvent\"]],\n    template: function QuotesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, QuotesComponent_app_quote_1_Template, 1, 1, \"app-quote\", 1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.quotes);\n      }\n    },\n    directives: [i1.NgForOf, i2.QuoteComponent],\n    styles: [\"\"]\n  });\n  return QuotesComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}